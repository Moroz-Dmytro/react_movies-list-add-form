{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/InputField/InputField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","InputField","React","memo","props","name","value","handleChange","htmlFor","id","type","placeholder","classNames","onChange","autoComplete","defaultState","NewMovie","state","event","target","setState","onSubmit","preventDefault","onAdd","this","action","disabled","Component","App","moviesFromServer","addMovie","newMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56f3783c.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\n\ninterface Props {\n  name: string;\n  value: string;\n  handleChange: (event: InputAndTextareaEvent) => void;\n}\n\nexport const InputField: React.FC<Props> = React.memo((props) => {\n  const {\n    name, value, handleChange,\n  } = props;\n\n  return (\n    <label htmlFor={name}>\n      <input\n        id={name}\n        type=\"text\"\n        name={name}\n        placeholder={name}\n        className={classNames(\n          'form-control',\n          { 'is-invalid': !value },\n          { 'is-valid': value },\n        )}\n        value={value}\n        onChange={handleChange}\n        autoComplete=\"off\"\n      />\n      <div className=\"invalid-feedback\">\n        This field is required!\n      </div>\n      <div className=\"valid-feedback\">\n        Correct!\n      </div>\n    </label>\n  );\n});\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { InputField } from '../InputField';\n\ntype Props = {\n  onAdd: (newMovie: Movie) => void;\n};\n\ntype State = Movie;\n\nconst defaultState = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    ...defaultState,\n  };\n\n  handleChange = (event: InputAndTextareaEvent) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    } as Pick<State, keyof State>);\n  };\n\n  onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    this.props.onAdd({ ...this.state });\n    this.setState({\n      ...defaultState,\n    });\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbId,\n      imdbUrl,\n    } = this.state;\n\n    return (\n      <>\n        <h2>Film data</h2>\n        <form\n          action=\"\"\n          className=\"row g-3\"\n          onSubmit={this.onSubmit}\n        >\n          <InputField\n            name=\"title\"\n            value={title}\n            handleChange={this.handleChange}\n          />\n          <textarea\n            name=\"description\"\n            placeholder=\"Description\"\n            className=\"form-control\"\n            value={description}\n            onChange={this.handleChange}\n            autoComplete=\"off\"\n          />\n          <InputField\n            name=\"imgUrl\"\n            value={imgUrl}\n            handleChange={this.handleChange}\n          />\n          <InputField\n            name=\"imdbId\"\n            value={imdbId}\n            handleChange={this.handleChange}\n          />\n          <InputField\n            name=\"imdbUrl\"\n            value={imdbUrl}\n            handleChange={this.handleChange}\n          />\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            disabled={!title || !imgUrl || !imdbId || !imdbUrl}\n          >\n            Add\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (newMovie: Movie) => {\n    this.setState((state) => ({\n      movies: [newMovie, ...state.movies],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}