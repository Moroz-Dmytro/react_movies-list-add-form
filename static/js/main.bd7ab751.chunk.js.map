{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/InputField/InputField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","InputField","React","memo","props","name","value","handleChange","valid","htmlFor","id","type","placeholder","classNames","onChange","autoComplete","defaultState","titleValid","imgUrlValid","imdbIdValid","imdbUrlValid","NewMovie","state","event","target","setState","validate","values","every","item","onSubmit","preventDefault","movieRequiredData","Object","onAdd","this","action","Component","App","moviesFromServer","addMovie","newMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd7ab751.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\n\ninterface Props {\n  name: string;\n  value: string;\n  valid: boolean;\n  handleChange: (event: InputAndTextareaEvent) => void;\n}\n\nexport const InputField: React.FC<Props> = React.memo((props) => {\n  const {\n    name, value, handleChange, valid,\n  } = props;\n\n  return (\n    <label htmlFor={name}>\n      <input\n        id={name}\n        type=\"text\"\n        name={name}\n        placeholder={name}\n        className={classNames(\n          'form-control',\n          { 'is-invalid': !valid },\n          { 'is-valid': valid && value },\n        )}\n        value={value}\n        onChange={handleChange}\n        autoComplete=\"off\"\n      />\n      <div className=\"invalid-feedback\">\n        This field is required!\n      </div>\n      <div className=\"valid-feedback\">\n        Correct!\n      </div>\n    </label>\n  );\n});\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { InputField } from '../InputField';\n\ntype Props = {\n  onAdd: (newMovie: Movie) => void;\n};\n\ntype Validate = {\n  titleValid: boolean;\n  imgUrlValid: boolean;\n  imdbIdValid: boolean;\n  imdbUrlValid: boolean;\n};\n\ntype State = Movie & Validate;\n\nconst defaultState = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n  titleValid: true,\n  imgUrlValid: true,\n  imdbIdValid: true,\n  imdbUrlValid: true,\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    ...defaultState,\n  };\n\n  handleChange = (event: InputAndTextareaEvent) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n      [`${name}Valid`]: true,\n    } as Pick<State, keyof State>);\n  };\n\n  validate = (values: string[]) => {\n    return values.every(item => item);\n  };\n\n  onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const {\n      title, description, imgUrl, imdbId, imdbUrl,\n    } = this.state;\n    const movieRequiredData = {\n      title, imgUrl, imdbUrl, imdbId,\n    };\n\n    if (!this.validate(Object.values(movieRequiredData))) {\n      this.setState({\n        titleValid: !!title,\n        imgUrlValid: !!imgUrl,\n        imdbIdValid: !!imdbId,\n        imdbUrlValid: !!imdbUrl,\n      });\n\n      return;\n    }\n\n    this.props.onAdd({ ...movieRequiredData, description });\n    this.setState({\n      ...defaultState,\n    });\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbId,\n      imdbUrl,\n      titleValid,\n      imgUrlValid,\n      imdbIdValid,\n      imdbUrlValid,\n    } = this.state;\n\n    return (\n      <>\n        <h2>Film data</h2>\n        <form\n          action=\"\"\n          className=\"row g-3\"\n          onSubmit={this.onSubmit}\n        >\n          <InputField\n            name=\"title\"\n            value={title}\n            valid={titleValid}\n            handleChange={this.handleChange}\n          />\n          <textarea\n            name=\"description\"\n            placeholder=\"Description\"\n            className=\"form-control\"\n            value={description}\n            onChange={this.handleChange}\n            autoComplete=\"off\"\n          />\n          <InputField\n            name=\"imgUrl\"\n            value={imgUrl}\n            valid={imgUrlValid}\n            handleChange={this.handleChange}\n          />\n          <InputField\n            name=\"imdbId\"\n            value={imdbId}\n            valid={imdbIdValid}\n            handleChange={this.handleChange}\n          />\n          <InputField\n            name=\"imdbUrl\"\n            value={imdbUrl}\n            valid={imdbUrlValid}\n            handleChange={this.handleChange}\n          />\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n          >\n            Add\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (newMovie: Movie) => {\n    this.setState((state) => ({\n      movies: [newMovie, ...state.movies],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}